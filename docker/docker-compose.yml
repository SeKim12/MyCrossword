version: "3.9"

services:
  db:
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "psql -U $$POSTGRES_USER", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/db:/var/lib/postgresql/data:Z
#    ports:
#      - "5432:5432"
    environment:
      POSTGRES_DB: crossword
      POSTGRES_USER: crossword
      POSTGRES_PASSWORD: crossword
#      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
#    secrets:
#      - db_password
    networks:
      localnet:
        ipv4_address: 172.202.1.2

  server:
    image: ksimon12/crossword:backend
    volumes:
      - ../myCrossword/server:/app/src
      - ../scripts/runserver.sh:/app/src/runserver.sh:ro
    ports:
      - "8080:8080"
    environment:
      HOST: db
      POSTGRES_NAME: crossword
      POSTGRES_USER: crossword
      POSTGRES_PASSWORD: crossword
#    secrets:
#      - db_password
    networks:
      localnet:
        ipv4_address: 172.202.1.3
    depends_on:
      db:
          condition: service_healthy
    entrypoint: "bash runserver.sh"

  client:
    image: ksimon12/crossword:frontend
    volumes:
      - ../myCrossword/client:/app/src
#      - ../scripts/runserver.sh:/app/src/runserver.sh:ro
    ports:
      - "4200:4200"
#    environment:
#      POSTGRES_NAME: crossword
#      POSTGRES_USER: crossword
#      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
#    secrets:
#      - db_password
    networks:
      localnet:
        ipv4_address: 172.202.1.4
    depends_on:
      db:
          condition: service_healthy
#    entrypoint: "bash runserver.sh"
#
#secrets:
#  db_password:
#    file: db_password.txt

networks:
  localnet:
    ipam:
      driver: default
      config:
        - subnet: 172.202.0.1/16